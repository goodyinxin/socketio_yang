<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
	default-lazy-init="true">

	<description>Spring配置</description>

	<context:property-placeholder location="classpath*:/config.properties" />
	
	<!-- 注解扫描 -->
	<context:component-scan base-package="com.yqh.www"/> 
	
	<!-- redisTemplate -->
  	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >
  		<property name="connectionFactory">
  		 	<ref bean="jedisConnectionFactory" /> 
  		</property> 
  		<property name="KeySerializer">
  			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
  		</property>
  		 <property name="valueSerializer">  
        <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
  		 </property>  
  		<property name="HashKeySerializer">  
		    <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>  
		</property>    
  		<property name="HashValueSerializer">  
		    <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>  
		</property>  
  	</bean>
	<!-- jedisConnectionFactory -->
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}"/>
		<property name="port" value="${redis.port}"/>
		<property name="password" value="${redis.pass}" />
		<property name="usePool" value="true"/>   
		<property name="timeout" value="60000" />
		<property name="database" value="0"/>
		<property name="poolConfig">
			<ref bean="jedisPoolConfig"/>
		</property> 
	</bean>
	
	<!-- JedisPoolConfig -->
 	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- <property name="maxTotal" value="600" /> -->  
        <property name="maxIdle" value="100" />  
        <property name="minIdle" value="30" />
        <!-- <property name="maxWaitMillis" value="60000" /> -->  
        <property name="testOnBorrow" value="true" /> 
        <property name="testOnReturn" value="true" /> 
        <property name="testWhileIdle" value="true" /> 
        <property name="timeBetweenEvictionRunsMillis" value="30000" />
        <property name="minEvictableIdleTimeMillis" value="30000" />
    </bean>
 	 
 	<!-- socketioConfig -->
	<bean id="socketioConfiguration" class="com.corundumstudio.socketio.Configuration">
		<property name="hostname" value="${socketio.host}"/>
		<property name="port" value="${socketio.port}"/>
	</bean>
	
	<!-- socketio server -->
	<bean id="socketIOServer" class="com.corundumstudio.socketio.SocketIOServer">
		<constructor-arg name="configuration" ref="socketioConfiguration"/>
	</bean>
	
	<!-- time defined -->
	<bean id="timeDefined" class="com.yqh.www.entity.TimeDefined">
		<property name="delayTime" value="${time.delay}"/>
		<property name="spaceTime" value="${time.space}"/>
	</bean>
	
</beans>
